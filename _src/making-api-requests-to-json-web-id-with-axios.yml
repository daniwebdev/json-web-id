title: "Making API Requests to json.web.id with Axios"
date: 2020-05-28T12:00:00+02:00
tags: ["javascript", "json.web.id", "axios"]
slug: making-api-requests-to-json-web-id-with-axios
description:
body: |-
    In this guide, we'll walk you through how to use the Axios library in Node.js to interact with the json.web.id API. We'll cover different scenarios such as registering users, logging in, retrieving data, creating new data, updating existing data, and deleting data. The json.web.id API requires an API key for authorization, so we'll make sure to include that in our requests as well.

    ## Prerequisites

    Before you start, make sure you have Node.js installed on your system. You'll also need to install the Axios library, which simplifies HTTP requests, by running:

    ```
    npm install axios
    ```

    ## Registering a User

    To register a new user with the json.web.id API, you can use the following Axios code:

    ```javascript
    const axios = require('axios');

    const url = 'https://json.web.id/app/register';
    const headers = {
        'Content-Type': 'application/json'
    };
    const data = {
        email: 'john@doe.com',
        password: 'secret',
        name: 'John Doe',
        phone: '+62857123123123'
    };

    axios.post(url, data, { headers })
        .then(response => {
            console.log(response.data);
        })
        .catch(error => {
            console.error('An error occurred:', error);
        });
    ```

    ## Logging In

    To log in to the json.web.id API, you can use the following Axios code:

    ```javascript
    const axios = require('axios');

    const url = 'https://json.web.id/app/login';
    const headers = {
        'Content-Type': 'application/json'
    };
    const data = {
        email: 'john@doe.com',
        password: 'secret'
    };

    axios.post(url, data, { headers })
        .then(response => {
            console.log(response.data);
        })
        .catch(error => {
            console.error('An error occurred:', error);
        });
    ```

    ## Retrieving Data

    To fetch data from the json.web.id API, you can use the following Axios code:

    ```javascript
    const axios = require('axios');

    const url = 'https://json.web.id/app/todo';
    const apiKey = 'your-api-key'; // Replace with your actual API key
    const headers = {
        'X-Api-Key': apiKey,
        'Content-Type': 'application/json'
    };
    const data = {};

    axios.get(url, { headers, data })
        .then(response => {
            console.log(response.data);
        })
        .catch(error => {
            console.error('An error occurred:', error);
        });
    ```

    ## Creating Data

    To create new data using the json.web.id API, you can use the following Axios code:

    ```javascript
    const axios = require('axios');

    const url = 'https://json.web.id/app/todo';
    const apiKey = 'your-api-key'; // Replace with your actual API key
    const headers = {
        'X-Api-Key': apiKey,
        'Content-Type': 'application/json'
    };
    const data = {
        title: 'Write Content',
        description: 'Write Lorem Ipsum is simply dummy text of the printing and typesetting industry.',
        status: 0
    };

    axios.post(url, data, { headers })
        .then(response => {
            console.log(response.data);
        })
        .catch(error => {
            console.error('An error occurred:', error);
        });
    ```

    ## Updating Data

    To update existing data using the json.web.id API, you can use the following Axios code:

    ```javascript
    const axios = require('axios');

    const uuid = '5345eb9b-1b1d-488d-a6ec-aa5e23558098'; // Replace with the actual UUID
    const url = `https://json.web.id/app/todo?uuid=${uuid}`;
    const apiKey = 'your-api-key'; // Replace with your actual API key
    const headers = {
        'X-Api-Key': apiKey,
        'Content-Type': 'application/json'
    };
    const data = {
        title: 'Write Content (Update)',
        description: 'Write Update Lorem Ipsum is simply dummy text of the printing and typesetting industry.',
        status: 1
    };

    axios.put(url, data, { headers })
        .then(response => {
            console.log(response.data);
        })
        .catch(error => {
            console.error('An error occurred:', error);
        });
    ```

    ## Deleting Data

    To delete data using the json.web.id API, you can use the following Axios code:

    ```javascript
    const axios = require('axios');

    const uuid = '5345eb9b-1b1d-488d-a6ec-aa5e23558098'; // Replace with the actual UUID
    const url = `https://json.web.id/app/todo?uuid=${uuid}`;
    const apiKey = 'your-api-key'; // Replace with your actual API key
    const headers = {
        'X-Api-Key': apiKey,
        'Content-Type': 'application/json'
    };

    axios.delete(url, { headers })
        .then(response => {
            console.log(response.data);
        })
        .catch(error => {
            console.error('An error occurred:', error);
        });
    ```

    In this guide, we've shown you how to use the Axios library to interact with the json.web.id API. By following these examples, you can perform user registration, login, data retrieval, data creation, data updating, and data deletion with ease.

    Remember to replace placeholders such as `your-api-key` and UUIDs with actual values. With Axios, making API requests becomes more straightforward and manageable in your Node.js applications.